_require "basis.smi"
_require "ext/Std.smi"

structure Either = struct
  datatype ('a, 'b) t =
    Left of 'a
    | Right of 'b

  val mapLeft : ('a -> 'c) -> ('a, 'b) t -> ('c, 'b) t
  val mapRight : ('b -> 'c) -> ('a, 'b) t -> ('a, 'c) t
  val isLeft :  ('a, 'b) t -> bool
  val isRight :  ('a, 'b) t -> bool
  val equal : ('a * 'a -> bool) -> ('b * 'b -> bool) -> (('a, 'b) t * ('a, 'b) t -> bool)
  val getLeft : ('a, 'b) t -> 'a option
  val getRight : ('a, 'b) t -> 'b option
end
